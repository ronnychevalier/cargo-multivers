name: ci
on:
  pull_request:
    paths:
    - '**'
    - '!/*.md'
    - "!/LICENSE-*"
  push:
    branches:
    - main
    paths:
    - '**'
    - '!/*.md'
    - "!/LICENSE-*"
jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        rust: ["nightly"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
    - uses: Swatinem/rust-cache@v2
    - name: Default features
      run: cargo test --workspace
  msrv:
    name: "Check MSRV: 1.74.0"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.74.0  # MSRV
        profile: minimal
        override: true
    - uses: Swatinem/rust-cache@v2
    - name: Default features
      run: cargo check --all-targets
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt
    - uses: Swatinem/rust-cache@v2
    - name: Check formatting
      run: cargo fmt --all -- --check
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.74.0  # MSRV
        profile: minimal
        override: true
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features --all-targets -- -D warnings
  clippy-runner:
    name: clippy
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -p multivers-runner --all-features --all-targets -- -D warnings
  cargo-deny:
    name: "cargo deny"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        rust-version: "1.74.0"
